# Pull an image from Docker Hub
docker pull nginx:latest
# Downloads the 'nginx' image with the 'latest' tag from Docker Hub.

# List all Docker containers (running and stopped)
docker ps -a
# Displays all containers, both running and stopped.

# Start a new container from an image
docker run -d -p 80:80 --name mynginx nginx
# Runs an 'nginx' container in detached mode, mapping port 80 of the container to port 80 on the host, with the name 'mynginx'.

# Stop a running container
docker stop mynginx
# Stops the 'mynginx' container.

# Remove a stopped container
docker rm mynginx
# Deletes the 'mynginx' container.

# List all Docker images on the system
docker images
# Shows all images that have been downloaded or built on the local system.

# Remove a Docker image
docker rmi nginx:latest
# Deletes the 'nginx' image with the 'latest' tag.

# Build an image from a Dockerfile
docker build -t myapp:1.0 .
# Builds a Docker image with the tag 'myapp:1.0' using the Dockerfile in the current directory.

# Execute a command inside a running container
docker exec -it mynginx /bin/bash
# Opens an interactive terminal session inside the 'mynginx' container.

# View logs from a running container
docker logs mynginx
# Displays the logs generated by the 'mynginx' container.

# Create a Docker network
docker network create mynetwork
# Creates a new Docker network named 'mynetwork'.

# Connect a container to a network
docker network connect mynetwork mynginx
# Connects the 'mynginx' container to the 'mynetwork' network.

# Tag an image for pushing to a registry
docker tag myapp:1.0 myrepo/myapp:1.0
# Tags the 'myapp:1.0' image for pushing to a repository named 'myrepo'.

# Push an image to Docker Hub or a private registry
docker push myrepo/myapp:1.0
# Uploads the tagged image to the specified repository.
